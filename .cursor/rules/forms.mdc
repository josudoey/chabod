---
description: Form implementation standards
globs: 
alwaysApply: false
---
# Form Handling Rules

## Required Pattern
- **Always** use React Hook Form + Zod + zodResolver
- **Always** use shadcn Form components for UI consistency
- Define Zod schemas with meaningful error messages
- Handle loading states and submission errors

## Standard Structure
```tsx
const formSchema = z.object({
  name: z.string().min(1, "Name is required"),
});

const form = useForm<z.infer<typeof formSchema>>({
  resolver: zodResolver(formSchema),
  defaultValues: { name: "" },
});

const onSubmit = async (values: z.infer<typeof formSchema>) => {
  try {
    // API call
    // Success message
  } catch (error) {
    // Error handling
  }
};
```
