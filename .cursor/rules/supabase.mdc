---
description: Supabase database integration standards
globs: "src/lib/**/*.ts"
alwaysApply: true
---
# Supabase Rules

## Critical Requirements
- **Always** import from `@/integrations/supabase/client`
- **Never** create new Supabase client instances
- **All** database operations in `src/lib/services/` files
- **Always** use try/catch with meaningful error messages
- Handle "not found" errors properly (code === "PGRST116")

## Type Safety
- Use types from `@/integrations/supabase/types`
- Extend types in `src/lib/types.ts` for relationships
- Create compound types like `TenantWithUsage`

## Error Handling Pattern
```tsx
try {
  const { data, error } = await supabase.from('table').select('*');
  if (error) throw error;
  return data;
} catch (error) {
  console.error('Operation failed:', error);
  throw error;
}
```
