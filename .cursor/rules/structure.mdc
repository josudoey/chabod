---
description: Project organization and file structure standards
globs: "src/**/*"
alwaysApply: true
---
# Structure Rules

## Directory Organization
- `src/components/` - Feature-organized UI components
  - `ui/` - shadcn components (don't modify)
  - Feature dirs: `Events/`, `Services/`, etc.
  - `shared/` - Cross-feature reusable components
- `src/lib/services/` - All database operations
- `src/lib/types.ts` - Type definitions
- `src/contexts/` - React context providers
- `src/hooks/` - Custom React hooks
- `src/pages/` - Page components

## Naming Conventions
- PascalCase: Component files and React components
- camelCase: Utility files and functions
- Descriptive names reflecting purpose

## Feature Development Pattern
1. Define types in `src/lib/types.ts`
2. Create service functions in `src/lib/services/`
3. Create UI components in `src/components/[Feature]/`
4. Add page components in `src/pages/`
5. Configure routes
